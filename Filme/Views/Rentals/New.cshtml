@model dynamic
@{
    ViewBag.Title = "Rent movies";
}

<h2 style="color:white">Rent movies</h2>
<div class="form">
    <form id="rentals">
        <div class="form-group">
            <p style="text-align: center;color:white; font-family:  'Lucida Sans' ">Customer</p>
            <div class="tt-container ">
                <input @*style=" padding: 7px 210px;"*@ id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
            </div>
        </div>
        <div class="form-group">
            <p style="text-align: center; color: white;font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;">Movie</p>
            <div class="tt-container ">
                <input @*style=" padding: 7px 210px;"*@ id="movie" name="movie" data-rule-atLeastOneMovie="true" type="text" value="" class="form-control " />
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 col-sm-4">
                <ul id="movies" class="list-group"></ul>
            </div>
        </div>

        <button style="position:relative;transition: .5s ease; left: 280px;" class="btn btn-success" title="Rent movie">Rent</button>
    </form>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");
    <style>
        h1, label, footer {
            color: white;
        }

        input, select, textarea {
            max-width: 500px;
        }
    </style>
    <script>
        $(document).ready(function () {

            var vm = {
                movieId: []
            };
            //customers typeahead
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 0,
                highlight: true
            },
                {
                    name: 'customer',
                    display: 'name',
                    source: customers
                }).on("typeahead:select",
                function (e, customer) {
                    vm.customerId = customer.id;
                });

            //movies typeahead
            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 1,
                highlight: true
            },
                {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }).on("typeahead:select",
                function (e, movie) {
                    $("#movies").append("<li class='list-group-item form1'>" + movie.name + "</li>");
                    $("#movie").typeahead("val", "");
                    vm.movieId.push(movie.id);
                });

            $.validator.addMethod("validCustomer",
                function () {
                    return vm.customerId && vm.customerId !== 0;
                },
                "Please select a valid customer.");

            $.validator.addMethod("atLeastOneMovie",
                function () {
                    return vm.movieId.length > 0;
                },
                "Please select at least one movie.");

            var validator = $("#rentals").validate({
                submitHandler: function (e) {
                    $.ajax({
                        url: "/api/rentals",
                        method: "POST",
                        data: vm
                    })
                        .done(function () {
                            toastr.success("Number of movies rented: " + vm.movieId.length, "Successfully rented.");
                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty();

                            vm = { movieId: [] };
                            validator.resetForm();
                        })
                        .fail(function () {
                            toastr.error("Something went wrong", "Fail renting.");
                        });
                    return false;
                }
            });
        });

    </script>
}
